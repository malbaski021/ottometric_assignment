name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install
      
      - name: Check Playwright Browsers
        run: ls ~/.cache/ms-playwright

      - name: Run Playwright tests (debug)
        run: npx playwright test --workers=2

      - name: Check if playwright-report exists after test run
        run: |
          if [ -d "playwright-report" ]; then
            echo "Report exists"
            ls -la playwright-report
          else
            echo "Report doesn't exist"
          fi

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ${{ github.workspace }}/playwright-report/
          retention-days: 30

  deploy:
    name: Deploy HTML report to GitHub Pages
    needs: test
    if: ${{ !cancelled() && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download Playwright report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: List downloaded report contents
        run: |
          ls -la playwright-report

      - name: Add redeploy marker
        run: |
          echo "Redeploy: $(date)" > playwright-report/.redeploy
          touch playwright-report/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './playwright-report'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4